##
## =====================================================================================
##  C O P Y R I G H T
## -------------------------------------------------------------------------------------
##  Copyright (c) 2022 by Robert Bosch GmbH. All rights reserved.
##
##  Author(s):
##  - Markus Braun, :em engineering methods AG (contracted by Robert Bosch GmbH)
## =====================================================================================
##

name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  python-version: 3.9

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
    - name: "Checkout Code"
      uses: actions/checkout@v3
      with:
        submodules: false
        fetch-depth: 0

    - name: "Ensure Python/Build Environment"
      uses: ./.github/actions/init
      with:
        python-version: ${{ env.python-version }}

    - name: "Run Tests"
      run: |
        mkdir -p docs/doxygen
        poetry run pytest --emoji -v -s --md $GITHUB_STEP_SUMMARY

    - name: "cache pre-commit"
      uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-py${{ env.python-version }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}
        restore-keys: |
          ${{ runner.os }}-py${{ env.python-version }}

    - name: "Run quality checks"
      run: |
        poetry run pre-commit run --all-files

    - name: "Update version, changelog and create release tag"
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
      id: semantic-release
      # We cannot use the github action "relekang/python-semantic-release@master" because
      # it's running in a container with has several issues..
      # We configured the python semantic release tool in pyproject.toml to just calculate and bump the version number
      # write the changelog and create a git tag. This will then be pushed and the CD.yml workflow will create the
      # final release.
      run: |
        git config user.email "actions@github.com"
        git config user.name "github-actions"
        poetry run semantic-release publish --verbosity=DEBUG
      env:
        GH_TOKEN: ${{ secrets.GITHUBTOKEN }}
